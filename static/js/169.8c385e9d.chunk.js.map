{"version":3,"file":"static/js/169.8c385e9d.chunk.js","mappings":"qKAgHA,UA3G2B,WACzB,OAAsEA,EAAAA,EAAAA,KAAY,SAACC,GAAD,MAAuB,CACvGC,MAAOD,EAAME,gBAAgBD,MAC7BE,SAAUH,EAAME,gBAAgBC,SAChCC,YAAaJ,EAAME,gBAAgBE,YACnCC,SAAUL,EAAME,gBAAgBG,SAChCC,SAAUN,EAAME,gBAAgBK,UAChCC,QAASR,EAAME,gBAAgBM,YANzBP,EAAR,EAAQA,MAAOE,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,YAAaC,EAAtC,EAAsCA,SAAUC,EAAhD,EAAgDA,SAAUE,EAA1D,EAA0DA,QAS1D,OACE,mBACEC,MAAO,CACLC,MAAO,OACPC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,UAQE,iBACEJ,MAAO,CACLC,MAAO,OACPI,QAAS,eACTC,SAAU,QACVC,UAAW,cALf,UAQGV,GACC,gBACEG,MAAO,CACLQ,UAAW,UACXP,MAAO,OACPQ,OAAQ,QAEVC,IAAKb,EACLc,IAAI,MAGN,iCACE,eACEX,OAAK,kBACAY,EAAAA,IADA,IAEHC,WAAY,OACZC,MAAO,YAJX,SAOGtB,KAEH,eACEQ,MAAO,CACLc,MAAO,UACPC,SAAU,WACVC,WAAY,WAJhB,SAOGtB,KAEH,gBAAKM,MAAO,CAAEE,QAAS,QAASD,MAAO,MAAOQ,OAAQ,WACtD,eACET,OAAK,kBACAY,EAAAA,IADA,IAEHC,WAAY,OACZC,MAAO,YAJX,SAOGnB,KAEH,iBAAMK,MAAO,CAAEC,MAAO,MAAOQ,OAAQ,OAAQP,QAAS,YACtD,wBACGN,EAASqB,KAAI,SAACC,GAAD,OACZ,UAAC,EAAAC,SAAD,YACE,gBACEnB,OAAK,kBACAY,EAAAA,IADA,IAEHV,QAAS,QACTkB,MAAO,OACPP,WAAY,SALhB,UAQGK,EAAQG,MARX,YAUA,eACErB,OAAK,UACAY,EAAAA,IAFP,SAKGM,EAAQI,UAhBEJ,EAAQK,aAuB9BxB,IACC,oBAASC,OAAK,kBAAOwB,EAAAA,IAAP,IAAsBnB,QAAS,UAA7C,UACE,eAAIL,OAAK,UAAOyB,EAAAA,IAAhB,UACU,OAAP1B,QAAO,IAAPA,OAAA,EAAAA,EAASkB,KAAI,SAACK,GACb,OAAO,eAAItB,MAAO,CAAE0B,WAAY,YAAzB,SAAwCJ,SAC3C,c,4LCrGPV,EAA4B,CACvCe,WAAY,YACZC,UAAW,SACXf,WAAY,SACZE,SAAU,OACVC,WAAY,QAGDa,GAA6B,kBACrCjB,GADqC,IAExCC,WAAY,SAEDiB,EAAc,UAEdL,GAAuB,kBAC/Bb,GAD+B,IAElCmB,UAAW,OACXC,WAAY,SAGDC,EAA+B,CAC1ChC,MAAO,OACPC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZ8B,WAAY,4BAGDV,EAA+B,CAC1CvB,MAAO,OACPI,QAAS,OACTC,SAAU,QACVC,UAAW","sources":["features/preview/indication.tsx","features/preview/previewStyles.tsx"],"sourcesContent":["import { Fragment } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from 'src/features';\nimport { fontStyles, articleStyles, UlStyles } from './previewStyles';\n\nconst IndicationFragment = () => {\n  const { title, subtitle, description, contents, imageUrl, warning } = useSelector((state: RootState) => ({\n    title: state.indicationSlice.title,\n    subtitle: state.indicationSlice.subtitle,\n    description: state.indicationSlice.description,\n    contents: state.indicationSlice.contents,\n    imageUrl: state.indicationSlice.image_url,\n    warning: state.indicationSlice.warning,\n  }));\n\n  return (\n    <footer\n      style={{\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <div\n        style={{\n          width: '100%',\n          padding: '1.25rem 1rem',\n          maxWidth: '640px',\n          boxSizing: 'border-box',\n        }}\n      >\n        {imageUrl ? (\n          <img\n            style={{\n              objectFit: 'contain',\n              width: '100%',\n              height: '100%',\n            }}\n            src={imageUrl}\n            alt=''\n          />\n        ) : (\n          <>\n            <h4\n              style={{\n                ...fontStyles,\n                fontWeight: 'bold',\n                color: '#282828',\n              }}\n            >\n              {title}\n            </h4>\n            <h4\n              style={{\n                color: '#282828',\n                fontSize: '0.875rem',\n                lineHeight: '1.25rem',\n              }}\n            >\n              {subtitle}\n            </h4>\n            <div style={{ display: 'block', width: '1px', height: '24px' }} />\n            <h6\n              style={{\n                ...fontStyles,\n                fontWeight: 'bold',\n                color: '#282828',\n              }}\n            >\n              {description}\n            </h6>\n            <span style={{ width: '1px', height: '12px', display: 'block' }} />\n            <dl>\n              {contents.map((content) => (\n                <Fragment key={content.key}>\n                  <dt\n                    style={{\n                      ...fontStyles,\n                      display: 'block',\n                      float: 'left',\n                      fontWeight: 'bold',\n                    }}\n                  >\n                    {content.label}:&nbsp;\n                  </dt>\n                  <dd\n                    style={{\n                      ...fontStyles,\n                    }}\n                  >\n                    {content.value}\n                  </dd>\n                </Fragment>\n              ))}\n            </dl>\n          </>\n        )}\n        {warning && (\n          <article style={{ ...articleStyles, padding: '8px 0' }}>\n            <ul style={{ ...UlStyles }}>\n              {warning?.map((value) => {\n                return <li style={{ whiteSpace: 'pre-line' }}>{value}</li>;\n              }) || []}\n            </ul>\n          </article>\n        )}\n      </div>\n    </footer>\n  );\n};\n\nexport default IndicationFragment;\n","import { CSSProperties } from 'react';\n\nexport const fontStyles: CSSProperties = {\n  fontFamily: 'Noto Sans',\n  fontStyle: 'normal',\n  fontWeight: 'normal',\n  fontSize: '15px',\n  lineHeight: '30px',\n};\n\nexport const fontStylesBold: CSSProperties = {\n  ...fontStyles,\n  fontWeight: 'bold',\n};\nexport const red: string = '#FF0000';\n\nexport const UlStyles: CSSProperties = {\n  ...fontStyles,\n  listStyle: 'disc',\n  marginLeft: '24px',\n};\n\nexport const sectionStyles: CSSProperties = {\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  background: 'rgba(229, 229, 229, 0.2)',\n};\n\nexport const articleStyles: CSSProperties = {\n  width: '100%',\n  padding: '18px',\n  maxWidth: '640px',\n  boxSizing: 'border-box',\n};\n"],"names":["useSelector","state","title","indicationSlice","subtitle","description","contents","imageUrl","image_url","warning","style","width","display","flexDirection","alignItems","padding","maxWidth","boxSizing","objectFit","height","src","alt","fontStyles","fontWeight","color","fontSize","lineHeight","map","content","Fragment","float","label","value","key","articleStyles","UlStyles","whiteSpace","fontFamily","fontStyle","fontStylesBold","red","listStyle","marginLeft","sectionStyles","background"],"sourceRoot":""}