{"version":3,"file":"static/js/206.cc84ddf7.chunk.js","mappings":"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","sources":["features/form/indication/index.tsx","../node_modules/@material-ui/icons/esm/AddCircle.js"],"sourcesContent":["import { FC, useState } from \"react\";\nimport {\n  Grid,\n  Button,\n  Divider,\n  IconButton,\n  FormControl,\n  Switch,\n  FormGroup,\n  TextField,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport Spacer from \"src/components/Spacer\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AddCircle, Delete } from \"@material-ui/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"src/features\";\nimport {\n  setTitle,\n  setSubtitle,\n  setDescription,\n  setImageUrl,\n  setContentLabel,\n  setContentValue,\n  setWarning,\n  addContent,\n  removeContent,\n} from \"./indicationSlice\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: \"480px\",\n  },\n  sketchPickerWrapper: {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst Indication: FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    imageUrl,\n    title,\n    subtitle,\n    description,\n    warning,\n    contents,\n  } = useSelector((state: RootState) => ({\n    imageUrl: state.indicationSlice.image_url,\n    title: state.indicationSlice.title,\n    subtitle: state.indicationSlice.subtitle,\n    description: state.indicationSlice.description,\n    warning: state.indicationSlice.warning,\n    contents: state.indicationSlice.contents,\n  }));\n\n  const [isImage, setIsImage] = useState<boolean>(!!imageUrl);\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12}>\n        <FormControlLabel\n          className={classes.formControl}\n          label=\"이미지로 등록하기\"\n          control={\n            <Switch\n              checked={isImage}\n              onChange={(e) => setIsImage(e.target.checked)}\n            />\n          }\n        />\n      </Grid>\n      {isImage ? (\n        <Grid item xs={12}>\n          <FormControl className={classes.formControl}>\n            <TextField\n              label=\"이미지 URL\"\n              value={imageUrl}\n              placeholder=\"https://\"\n              onChange={({ target: { value } }) =>\n                dispatch(setImageUrl(value as string))\n              }\n            />\n          </FormControl>\n        </Grid>\n      ) : (\n        <>\n          <Spacer axis=\"vertical\" size={12} />\n          <Grid item xs={12}>\n            <FormControl className={classes.formControl}>\n              <TextField\n                label=\"제품명(영문)\"\n                value={title}\n                onChange={({ target: { value } }) =>\n                  dispatch(setTitle(value as string))\n                }\n              />\n            </FormControl>\n          </Grid>\n          <Spacer axis=\"vertical\" size={12} />\n          <Grid item xs={12}>\n            <FormControl className={classes.formControl}>\n              <TextField\n                label=\"제품명(한글)\"\n                value={subtitle}\n                onChange={({ target: { value } }) =>\n                  dispatch(setSubtitle(value as string))\n                }\n              />\n            </FormControl>\n          </Grid>\n          <Spacer axis=\"vertical\" size={12} />\n          <Grid item xs={12}>\n            <FormControl className={classes.formControl}>\n              <TextField\n                label=\"설명\"\n                value={description}\n                onChange={({ target: { value } }) =>\n                  dispatch(setDescription(value as string))\n                }\n              />\n            </FormControl>\n          </Grid>\n          <Spacer axis=\"vertical\" size={12} />\n          <Grid item xs={12}>\n            <FormControl\n              className={classes.formControl}\n              style={{ minWidth: \"240px\" }}\n            >\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                startIcon={<AddCircle />}\n                onClick={() =>\n                  dispatch(\n                    addContent({\n                      key: contents.length,\n                      label: \"\",\n                      value: \"\",\n                    })\n                  )\n                }\n              >\n                콘텐츠 추가\n              </Button>\n            </FormControl>\n          </Grid>\n          <Spacer axis=\"vertical\" size={12} />\n          <Grid item xs={12}>\n            <Grid container alignItems=\"center\">\n              {contents?.map((content, idx) => {\n                return (\n                  <>\n                    <Grid item xs={10}>\n                      <FormGroup key={idx} style={{ width: \"100%\" }}>\n                        <FormControl className={classes.formControl}>\n                          <TextField\n                            style={{ minWidth: \"120px\" }}\n                            variant=\"outlined\"\n                            value={content.label}\n                            onChange={({ target: { value } }) =>\n                              dispatch(\n                                setContentLabel({\n                                  key: idx,\n                                  label: value,\n                                })\n                              )\n                            }\n                          />\n                        </FormControl>\n                        <FormControl className={classes.formControl}>\n                          <TextField\n                            style={{ minWidth: \"120px\" }}\n                            variant=\"outlined\"\n                            value={content.value}\n                            onChange={({ target: { value } }) =>\n                              dispatch(\n                                setContentValue({\n                                  key: idx,\n                                  value,\n                                })\n                              )\n                            }\n                          />\n                        </FormControl>\n                      </FormGroup>\n                    </Grid>\n                    <Grid item xs={2}>\n                      <FormControl\n                        className={classes.formControl}\n                        style={{ minWidth: 0 }}\n                      >\n                        <IconButton\n                          aria-label=\"delete\"\n                          color=\"secondary\"\n                          onClick={() => dispatch(removeContent(idx))}\n                        >\n                          <Delete />\n                        </IconButton>\n                      </FormControl>\n                    </Grid>\n                    {contents.length - 1 !== idx && (\n                      <Grid item xs={12}>\n                        <Divider />\n                      </Grid>\n                    )}\n                  </>\n                );\n              })}\n            </Grid>\n          </Grid>\n        </>\n      )}\n      <Grid item xs={12}>\n        <FormControl className={classes.formControl}>\n          <TextField\n            value={warning}\n            onChange={({ target: { value } }) =>\n              dispatch(setWarning(value as string))\n            }\n          />\n        </FormControl>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Indication;\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircle');"],"names":["useStyles","makeStyles","theme","root","formControl","margin","spacing","minWidth","sketchPickerWrapper","padding","classes","dispatch","useDispatch","useSelector","state","imageUrl","indicationSlice","image_url","title","subtitle","description","warning","contents","useState","isImage","setIsImage","container","className","item","xs","label","control","checked","onChange","e","target","value","placeholder","setImageUrl","axis","size","setTitle","setSubtitle","setDescription","style","variant","color","startIcon","onClick","addContent","key","length","alignItems","map","content","idx","width","setContentLabel","setContentValue","removeContent","setWarning","createSvgIcon","React","d"],"sourceRoot":""}