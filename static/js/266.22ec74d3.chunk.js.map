{"version":3,"file":"static/js/266.22ec74d3.chunk.js","mappings":"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","sources":["../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);"],"names":["FormControlLabel","React","props","ref","checked","classes","className","control","disabledProp","disabled","label","inputRef","_props$labelPlacement","labelPlacement","other","name","onChange","value","_objectWithoutProperties","muiFormControl","useFormControl","controlProps","forEach","key","_extends","clsx","root","concat","capitalize","Typography","component","withStyles","theme","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","color","palette","text","FormGroup","_props$row","row","flexWrap","Switch","_props$color","_props$edge","edge","_props$size","size","icon","thumb","edgeStart","edgeEnd","SwitchBase","type","checkedIcon","switchBase","input","track","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","colorAdjust","top","left","grey","transition","transitions","create","duration","shortest","transform","opacity","colorPrimary","primary","main","backgroundColor","alpha","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","autoFocus","checkedProp","defaultChecked","id","inputProps","onBlur","onFocus","readOnly","required","tabIndex","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","hasLabelFor","IconButton","role","undefined","event","newChecked","target","margin"],"sourceRoot":""}