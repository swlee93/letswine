{"version":3,"file":"static/js/174.aaaecde0.chunk.js","mappings":"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","sources":["features/form/drinkingGuide/WineForm.tsx","features/form/drinkingGuide/OthersForm.tsx","features/form/drinkingGuide/index.tsx"],"sourcesContent":["import React, { ChangeEvent } from \"react\";\nimport {\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  Radio,\n  RadioGroup,\n  Slider,\n  Switch,\n} from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\nimport {\n  setCharacteristicAcidic,\n  setCharacteristicBody,\n  setCharacteristicSweet,\n  setCharacteristicTannic,\n  setDecanting,\n  setGlass,\n  setTemperature,\n} from \"./drinkingGuideSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../index\";\nimport { temp_marks, useStyles } from \"./index\";\n\nconst WineForm = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { glass, decanting, characteristics, temperature } = useSelector(\n    (state: RootState) => ({\n      glass: state.drinkingGuideSlice.glass,\n      decanting: state.drinkingGuideSlice.decanting,\n      temperature: state.drinkingGuideSlice.temperature,\n      characteristics: state.drinkingGuideSlice.characteristics,\n    })\n  );\n\n  return (\n    <>\n      <Grid item xs={6}>\n        <FormControlLabel\n          className={classes.formControl}\n          label=\"디켄팅 유무\"\n          control={\n            <Switch\n              checked={decanting}\n              onChange={(e) => dispatch(setDecanting(e.target.checked))}\n            />\n          }\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">와인잔</FormLabel>\n          <RadioGroup\n            row\n            aria-label=\"glass\"\n            name=\"와인잔\"\n            value={String(glass)}\n            onChange={({\n              target: { value },\n            }: ChangeEvent<{ value: unknown }>) =>\n              dispatch(setGlass(value as string))\n            }\n          >\n            <FormControlLabel value=\"1\" control={<Radio />} label=\"와인잔 1\" />\n            <FormControlLabel value=\"2\" control={<Radio />} label=\"와인잔 2\" />\n            <FormControlLabel value=\"3\" control={<Radio />} label=\"와인잔 3\" />\n            <FormControlLabel value=\"4\" control={<Radio />} label=\"와인잔 4\" />\n            <FormControlLabel value=\"5\" control={<Radio />} label=\"와인잔 5\" />\n          </RadioGroup>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n        <FormControlLabel\n          label=\"음용 온도\"\n          labelPlacement=\"top\"\n          className={classes.formControl}\n          control={\n            <Slider\n              getAriaValueText={(value) => `${value}°C`}\n              step={1}\n              style={{ minWidth: \"480px\", paddingTop: \"48px\" }}\n              value={[temperature.min, temperature.max]}\n              aria-labelledby=\"range-slider\"\n              valueLabelDisplay=\"on\"\n              marks={temp_marks}\n              min={-10}\n              max={30}\n              onChange={(e, v) => {\n                const [min, max] = Array.isArray(v) ? v : [];\n\n                min && max && dispatch(setTemperature({ min, max }));\n              }}\n            />\n          }\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <FormControlLabel\n          label=\"바디\"\n          labelPlacement=\"top\"\n          className={classes.formControl}\n          control={\n            <Rating\n              value={characteristics.body}\n              max={4}\n              onChange={(e, v) => dispatch(setCharacteristicBody(v))}\n            />\n          }\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <FormControlLabel\n          label=\"산미\"\n          labelPlacement=\"top\"\n          className={classes.formControl}\n          control={\n            <Rating\n              value={characteristics.acidic}\n              max={4}\n              onChange={(e, v) => dispatch(setCharacteristicAcidic(v))}\n            />\n          }\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <FormControlLabel\n          label=\"타닌\"\n          labelPlacement=\"top\"\n          className={classes.formControl}\n          control={\n            <Rating\n              value={characteristics.tannic}\n              max={4}\n              onChange={(e, v) => dispatch(setCharacteristicTannic(v))}\n            />\n          }\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <FormControlLabel\n          label=\"당도\"\n          labelPlacement=\"top\"\n          className={classes.formControl}\n          control={\n            <Rating\n              value={characteristics.sweet}\n              max={4}\n              onChange={(e, v) => dispatch(setCharacteristicSweet(v))}\n            />\n          }\n        />\n      </Grid>\n    </>\n  );\n};\n\nexport default WineForm;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  FormControl,\n  FormControlLabel,\n  Grid,\n  Slider,\n  Switch,\n  TextField,\n} from \"@material-ui/core\";\nimport {\n  setOtherCharacteristic,\n  setOtherCharacteristicImage,\n  setOtherCharacteristicName,\n  setOtherDecantingImageUrl,\n  setOtherDecantingSubtitle,\n  setOtherDecantingTitle,\n  setOtherGlassDescription,\n  setOtherGlassImageUrl,\n  setOtherGlassType,\n  setTemperature,\n} from \"./drinkingGuideSlice\";\nimport { temp_marks, useStyles } from \"./index\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../index\";\nimport { Rating } from \"@material-ui/lab\";\n\nconst OthersForm = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    otherGlassType,\n    otherGlassDescription,\n    otherGlassImageUrl,\n    temperature,\n    otherDecantingTitle,\n    otherDecantingSubtitle,\n    otherCharacteristic,\n    otherCharacteristicName,\n    otherCharacteristicImageUrl,\n    otherDecantingImageUrl,\n  } = useSelector((state: RootState) => ({\n    otherGlassType: state.drinkingGuideSlice.otherGlassType,\n    otherGlassDescription: state.drinkingGuideSlice.otherGlassDescription,\n    otherGlassImageUrl: state.drinkingGuideSlice.otherGlassImageUrl,\n    otherDecantingTitle: state.drinkingGuideSlice.otherDecantingTitle,\n    otherDecantingSubtitle: state.drinkingGuideSlice.otherDecantingSubtitle,\n    otherDecantingImageUrl: state.drinkingGuideSlice.otherDecantingImageUrl,\n    otherCharacteristic: state.drinkingGuideSlice.otherCharacteristic,\n    otherCharacteristicName: state.drinkingGuideSlice.otherCharacteristicName,\n    otherCharacteristicImageUrl:\n      state.drinkingGuideSlice.otherCharacteristicImageUrl,\n    temperature: state.drinkingGuideSlice.temperature,\n  }));\n\n  const [isImage, setIsImage] = useState<boolean>(false);\n\n  useEffect(() => {\n    !isImage && setOtherCharacteristicImage(\"\");\n  }, [isImage]);\n\n  return (\n    <>\n      <Grid item xs={4}>\n        <FormControl className={classes.formControl}>\n          <TextField\n            label=\"글래스 타입\"\n            value={otherGlassType}\n            onChange={({ target: { value } }) =>\n              dispatch(setOtherGlassType(value as string))\n            }\n          />\n        </FormControl>\n      </Grid>\n      <Grid item xs={4}>\n        <FormControl className={classes.formControl}>\n          <TextField\n            label=\"글래스 설명\"\n            value={otherGlassDescription}\n            onChange={({ target: { value } }) =>\n              dispatch(setOtherGlassDescription(value as string))\n            }\n          />\n        </FormControl>\n      </Grid>\n      <Grid item xs={4}>\n        <FormControl className={classes.formControl}>\n          <TextField\n            label=\"글래스 이미지\"\n            value={otherGlassImageUrl}\n            onChange={({ target: { value } }) =>\n              dispatch(setOtherGlassImageUrl(value as string))\n            }\n          />\n        </FormControl>\n      </Grid>\n      <Grid item xs={4}>\n        <FormControl className={classes.formControl}>\n          <TextField\n            label=\"디켄팅 영역 제목\"\n            value={otherDecantingTitle}\n            onChange={({ target: { value } }) =>\n              dispatch(setOtherDecantingTitle(value))\n            }\n          />\n        </FormControl>\n      </Grid>\n      <Grid item xs={4}>\n        <FormControl className={classes.formControl}>\n          <TextField\n            label=\"디켄팅 영역 부제목\"\n            value={otherDecantingSubtitle}\n            onChange={({ target: { value } }) =>\n              dispatch(setOtherDecantingSubtitle(value))\n            }\n          />\n        </FormControl>\n      </Grid>\n      <Grid item xs={4}>\n        <FormControl className={classes.formControl}>\n          <TextField\n            label=\"디캔팅 영역 이미지\"\n            placeholder=\"https://\"\n            value={otherDecantingImageUrl}\n            onChange={({ target: { value } }) =>\n              dispatch(setOtherDecantingImageUrl(value))\n            }\n          />\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n        <FormControlLabel\n          label=\"음용 온도\"\n          labelPlacement=\"top\"\n          className={classes.formControl}\n          control={\n            <Slider\n              getAriaValueText={(value) => `${value}°C`}\n              step={1}\n              style={{ minWidth: \"480px\", paddingTop: \"48px\" }}\n              value={[temperature.min, temperature.max]}\n              aria-labelledby=\"range-slider\"\n              valueLabelDisplay=\"on\"\n              marks={temp_marks}\n              min={-10}\n              max={30}\n              onChange={(e, v) => {\n                const [min, max] = Array.isArray(v) ? v : [];\n\n                min && max && dispatch(setTemperature({ min, max }));\n              }}\n            />\n          }\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <FormControlLabel\n          className={classes.formControl}\n          label=\"이미지로 등록하기\"\n          control={\n            <Switch\n              checked={isImage}\n              onChange={(e) => setIsImage(e.target.checked)}\n            />\n          }\n        />\n      </Grid>\n      {isImage ? (\n        <Grid item xs={12}>\n          <FormControl className={classes.formControl}>\n            <TextField\n              label=\"이미지 URL\"\n              value={otherCharacteristicImageUrl}\n              placeholder=\"https://\"\n              onChange={({ target: { value } }) =>\n                dispatch(setOtherCharacteristicImage(value as string))\n              }\n            />\n          </FormControl>\n        </Grid>\n      ) : (\n        <>\n          <Grid item xs={6}>\n            <FormControlLabel\n              label=\"별점\"\n              labelPlacement=\"top\"\n              className={classes.formControl}\n              control={\n                <TextField\n                  label=\"별점 문구\"\n                  value={otherCharacteristicName}\n                  onChange={({ target: { value } }) =>\n                    dispatch(setOtherCharacteristicName(value as string))\n                  }\n                />\n              }\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <FormControlLabel\n              label=\"별점\"\n              labelPlacement=\"top\"\n              className={classes.formControl}\n              control={\n                <Rating\n                  value={otherCharacteristic}\n                  max={4}\n                  onChange={(e, v) => dispatch(setOtherCharacteristic(v))}\n                />\n              }\n            />\n          </Grid>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default OthersForm;\n","import { FC, ChangeEvent } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  FormControl,\n  Grid,\n  Select,\n  InputLabel,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { RootState } from \"src/features\";\n\nimport { setType, BeveragesType } from \"./drinkingGuideSlice\";\nimport WineForm from \"./WineForm\";\nimport OthersForm from \"./OthersForm\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {},\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport const temp_marks = [\n    {\n        value: -10,\n        label: \"-10°C\",\n    },\n    {\n        value: 0,\n        label: \"0°C\",\n    },\n    {\n        value: 10,\n        label: \"10°C\",\n    },\n    {\n        value: 20,\n        label: \"20°C\",\n    },\n    {\n        value: 30,\n        label: \"30°C\",\n    },\n];\n\nconst DrinkingGuide: FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { type } = useSelector((state: RootState) => ({\n    type: state.drinkingGuideSlice.type,\n  }));\n\n  return (\n    <Grid container className={classes.root} spacing={6}>\n      <Grid item xs={12} alignItems=\"center\">\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"type-label\">음료 유형</InputLabel>\n          <Select\n            labelId=\"type-label\"\n            id=\"type\"\n            label=\"음료 유형\"\n            value={type}\n            onChange={({\n              target: { value },\n            }: ChangeEvent<{ value: unknown }>) =>\n              dispatch(setType(value as BeveragesType))\n            }\n          >\n            <MenuItem value=\"wine\">와인</MenuItem>\n            <MenuItem value=\"etc\">그 외</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n      {type === \"wine\" ? <WineForm /> : <OthersForm />}\n    </Grid>\n  );\n};\n\nexport default DrinkingGuide;\n"],"names":["classes","useStyles","dispatch","useDispatch","useSelector","state","glass","drinkingGuideSlice","decanting","temperature","characteristics","Grid","item","xs","FormControlLabel","className","formControl","label","control","Switch","checked","onChange","e","setDecanting","target","FormControl","component","FormLabel","RadioGroup","row","name","value","String","setGlass","Radio","labelPlacement","Slider","getAriaValueText","step","style","minWidth","paddingTop","min","max","valueLabelDisplay","marks","temp_marks","v","Array","isArray","setTemperature","Rating","body","setCharacteristicBody","acidic","setCharacteristicAcidic","tannic","setCharacteristicTannic","sweet","setCharacteristicSweet","otherGlassType","otherGlassDescription","otherGlassImageUrl","otherDecantingTitle","otherDecantingSubtitle","otherDecantingImageUrl","otherCharacteristic","otherCharacteristicName","otherCharacteristicImageUrl","useState","isImage","setIsImage","useEffect","setOtherCharacteristicImage","TextField","setOtherGlassType","setOtherGlassDescription","setOtherGlassImageUrl","setOtherDecantingTitle","setOtherDecantingSubtitle","placeholder","setOtherDecantingImageUrl","setOtherCharacteristicName","setOtherCharacteristic","makeStyles","theme","root","margin","spacing","type","container","alignItems","variant","InputLabel","id","Select","labelId","setType","MenuItem"],"sourceRoot":""}