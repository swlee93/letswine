{"version":3,"file":"static/js/230.88550788.chunk.js","mappings":"wLAOMA,GAAYC,EAAAA,EAAAA,IAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,GACNC,YAAa,CACXC,OAAQH,EAAMI,QAAQ,QA2G1B,UAnG4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACvBC,EAAUR,IACVS,GAAWC,EAAAA,EAAAA,MACjB,GAUIC,EAAAA,EAAAA,KAAY,SAACC,GAAD,MAAuB,CACrCC,UAAWD,EAAME,cAAcD,UAC/BE,UAAWH,EAAME,cAAcC,UAC/BC,UAAWJ,EAAME,cAAcE,UAC/BC,OAAQL,EAAME,cAAcG,OAC5BC,OAAQN,EAAME,cAAcI,OAC5BC,OAAQP,EAAME,cAAcK,OAC5BC,UAAWR,EAAME,cAAcM,UAC/BC,UAAWT,EAAME,cAAcO,UAC/BC,UAAWV,EAAME,cAAcQ,cAlB/BT,EADF,EACEA,UACAE,EAFF,EAEEA,UACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,OACAC,EALF,EAKEA,OACAC,EANF,EAMEA,OACAC,EAPF,EAOEA,UACAC,EARF,EAQEA,UACAC,EATF,EASEA,UA4CF,OACE,UAAC,IAAD,CAAMC,WAAS,EAACC,UAAWhB,EAAQL,KAAnC,WACE,SAAC,IAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CAAaF,UAAWhB,EAAQJ,YAAhC,UACE,SAAC,IAAD,CACEuB,MAAM,eACNC,MAAO,CAAEC,SAAU,SACnBC,MA5BO,SAACC,GAChB,OAAQA,GACN,KAAK,EACH,OAAOd,EACT,KAAK,EACH,OAAOC,EACT,KAAK,EACH,OAAOC,GAqBIa,CAASzB,GAChB0B,SAAU,gBAAaH,EAAb,EAAGI,OAAUJ,MAAb,OACRrB,GAAS0B,EAAAA,EAAAA,IAAS,CAAEC,MAAON,EAAOvB,MAAAA,aAK1C,SAAC,IAAD,CAAMkB,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CAAaF,UAAWhB,EAAQJ,YAAhC,UACE,SAAC,IAAD,CACEuB,MAAM,eACNC,MAAO,CAAEC,SAAU,SACnBC,MA9BU,SAACC,GACnB,OAAQA,GACN,KAAK,EACH,OAAOX,EACT,KAAK,EACH,OAAOC,EACT,KAAK,EACH,OAAOC,GAuBIe,CAAY9B,GACnB0B,SAAU,gBAAaH,EAAb,EAAGI,OAAUJ,MAAb,OACRrB,GAAS6B,EAAAA,EAAAA,IAAY,CAAEC,SAAUT,EAAOvB,MAAAA,aAKhD,SAAC,IAAD,CAAMkB,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CAAaF,UAAWhB,EAAQJ,YAAhC,UACE,SAAC,IAAD,CACEuB,MAAM,yBACNa,YAAY,WACZZ,MAAO,CAAEC,SAAU,SACnBC,MA/DU,SAACC,GACnB,OAAQA,GACN,KAAK,EACH,OAAOlB,EACT,KAAK,EACH,OAAOE,EACT,KAAK,EACH,OAAOC,GAwDIyB,CAAYlC,GACnB0B,SAAU,gBAAaH,EAAb,EAAGI,OAAUJ,MAAb,OACRrB,GAASiC,EAAAA,EAAAA,IAAY,CAAEC,SAAUb,EAAOvB,MAAAA","sources":["features/form/untitled/index.tsx"],"sourcesContent":["import { FC } from \"react\";\nimport { FormControl, Grid, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setImageUrl, setSubtitle, setTitle } from \"./untitledSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../index\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}));\n\ninterface Props {\n  order: number;\n}\n\nconst Untitled: FC<Props> = ({ order }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    imageUrl1,\n    imageUrl2,\n    imageUrl3,\n    title1,\n    title2,\n    title3,\n    subtitle1,\n    subtitle2,\n    subtitle3,\n  } = useSelector((state: RootState) => ({\n    imageUrl1: state.untitledSlice.imageUrl1,\n    imageUrl2: state.untitledSlice.imageUrl2,\n    imageUrl3: state.untitledSlice.imageUrl3,\n    title1: state.untitledSlice.title1,\n    title2: state.untitledSlice.title2,\n    title3: state.untitledSlice.title3,\n    subtitle1: state.untitledSlice.subtitle1,\n    subtitle2: state.untitledSlice.subtitle2,\n    subtitle3: state.untitledSlice.subtitle3,\n  }));\n\n  const getImageUrl = (n: number) => {\n    switch (n) {\n      case 1:\n        return imageUrl1;\n      case 2:\n        return imageUrl2;\n      case 3:\n        return imageUrl3;\n    }\n  };\n  const getTitle = (n: number) => {\n    switch (n) {\n      case 1:\n        return title1;\n      case 2:\n        return title2;\n      case 3:\n        return title3;\n    }\n  };\n  const getSubtitle = (n: number) => {\n    switch (n) {\n      case 1:\n        return subtitle1;\n      case 2:\n        return subtitle2;\n      case 3:\n        return subtitle3;\n    }\n  };\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12}>\n        <FormControl className={classes.formControl}>\n          <TextField\n            label=\"제목\"\n            style={{ minWidth: \"240px\" }}\n            value={getTitle(order)}\n            onChange={({ target: { value } }) =>\n              dispatch(setTitle({ title: value, order }))\n            }\n          />\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n        <FormControl className={classes.formControl}>\n          <TextField\n            label=\"부제\"\n            style={{ minWidth: \"240px\" }}\n            value={getSubtitle(order)}\n            onChange={({ target: { value } }) =>\n              dispatch(setSubtitle({ subtitle: value, order }))\n            }\n          />\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n        <FormControl className={classes.formControl}>\n          <TextField\n            label=\"이미지 URL\"\n            placeholder=\"https://\"\n            style={{ minWidth: \"240px\" }}\n            value={getImageUrl(order)}\n            onChange={({ target: { value } }) =>\n              dispatch(setImageUrl({ imageUrl: value, order }))\n            }\n          />\n        </FormControl>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Untitled;\n"],"names":["useStyles","makeStyles","theme","root","formControl","margin","spacing","order","classes","dispatch","useDispatch","useSelector","state","imageUrl1","untitledSlice","imageUrl2","imageUrl3","title1","title2","title3","subtitle1","subtitle2","subtitle3","container","className","item","xs","label","style","minWidth","value","n","getTitle","onChange","target","setTitle","title","getSubtitle","setSubtitle","subtitle","placeholder","getImageUrl","setImageUrl","imageUrl"],"sourceRoot":""}