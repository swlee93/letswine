{"version":3,"file":"static/js/789.fdeac835.chunk.js","mappings":"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","sources":["features/form/main/index.tsx","../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","../node_modules/@material-ui/icons/esm/AddCircle.js"],"sourcesContent":["import { FC } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AddCircle, Delete } from \"@material-ui/icons\";\nimport {\n  TextField,\n  FormGroup,\n  TextareaAutosize,\n  IconButton,\n  FormControl,\n  Grid,\n  Button,\n  Divider,\n  Typography,\n} from \"@material-ui/core\";\nimport Spacer from \"src/components/Spacer\";\nimport { RootState } from \"src/features\";\nimport {\n  setMainImageUrl,\n  addContent,\n  removeContent,\n  setContentTitle,\n  setContentDescription,\n  setContentImageUrl,\n  setContentEmbeddedUrl,\n} from \"./mainSlice\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst MAX_CONTENTS = 10;\n\nconst Main: FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { mainImageUrl, contents } = useSelector((state: RootState) => ({\n    mainImageUrl: state.mainSlice.main_image_url,\n    contents: state.mainSlice.contents,\n  }));\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12}>\n        <FormControl className={classes.formControl}>\n          <TextField\n            label=\"메인 이미지 URL\"\n            placeholder=\"https://\"\n            style={{ minWidth: \"240px\" }}\n            value={mainImageUrl}\n            onChange={({ target: { value } }) =>\n              dispatch(setMainImageUrl(value as string))\n            }\n          />\n        </FormControl>\n      </Grid>\n      <Spacer axis=\"vertical\" size={24} />\n      <Grid item xs={12}>\n        <FormControl\n          className={classes.formControl}\n          style={{ minWidth: \"240px\" }}\n        >\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            startIcon={<AddCircle />}\n            onClick={() =>\n              contents.length < MAX_CONTENTS &&\n              dispatch(\n                addContent({\n                  key: contents.length,\n                  title: \"\",\n                  description: \"\",\n                  image_url: \"\",\n                  embedded_url: \"\",\n                })\n              )\n            }\n          >\n            콘텐츠 추가\n          </Button>\n        </FormControl>\n      </Grid>\n      <Spacer axis=\"vertical\" size={12} />\n      <Grid item xs={12}>\n        {contents.map((content, idx) => (\n          <Grid key={idx} container alignItems=\"center\">\n            <Grid item xs={2}>\n              <Typography noWrap component=\"small\">{`콘텐츠 ${\n                idx + 1\n              }`}</Typography>\n            </Grid>\n            <Grid item xs={8}>\n              <FormGroup key={idx} style={{ width: \"100%\" }}>\n                <FormControl className={classes.formControl}>\n                  <TextField\n                    label=\"콘텐츠 제목\"\n                    value={content.title}\n                    style={{ minWidth: \"120px\" }}\n                    variant=\"outlined\"\n                    onChange={({ target: { value } }) =>\n                      dispatch(setContentTitle({ key: idx, title: value }))\n                    }\n                  />\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                  <TextField\n                    label=\"이미지 URL\"\n                    value={content.image_url}\n                    placeholder=\"https://\"\n                    style={{ minWidth: \"120px\" }}\n                    variant=\"outlined\"\n                    onChange={({ target: { value } }) =>\n                      dispatch(\n                        setContentImageUrl({ key: idx, imageUrl: value })\n                      )\n                    }\n                  />\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                  <TextField\n                    label=\"동영상 URL\"\n                    value={content.embedded_url}\n                    placeholder=\"https://\"\n                    style={{ minWidth: \"120px\" }}\n                    variant=\"outlined\"\n                    onChange={({ target: { value } }) =>\n                      dispatch(\n                        setContentEmbeddedUrl({ key: idx, embeddedUrl: value })\n                      )\n                    }\n                  />\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                  <TextareaAutosize\n                    aria-label=\"minimum height\"\n                    rowsMin={6}\n                    placeholder=\"콘텐츠 설명\"\n                    value={content.description}\n                    style={{ minWidth: \"180px\" }}\n                    onChange={({ target: { value } }) =>\n                      dispatch(\n                        setContentDescription({ key: idx, description: value })\n                      )\n                    }\n                  />\n                </FormControl>\n              </FormGroup>\n            </Grid>\n            <Grid item xs={2}>\n              <FormControl className={classes.formControl}>\n                <IconButton\n                  aria-label=\"delete\"\n                  color=\"secondary\"\n                  onClick={() => dispatch(removeContent(idx))}\n                >\n                  <Delete />\n                </IconButton>\n              </FormControl>\n            </Grid>\n            {contents.length - 1 !== idx && (\n              <Grid item xs={12}>\n                <Divider />\n              </Grid>\n            )}\n          </Grid>\n        ))}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Main;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircle');"],"names":["useStyles","makeStyles","theme","root","formControl","margin","spacing","classes","dispatch","useDispatch","useSelector","state","mainImageUrl","mainSlice","main_image_url","contents","container","className","item","xs","label","placeholder","style","minWidth","value","onChange","target","setMainImageUrl","axis","size","variant","color","startIcon","onClick","length","addContent","key","title","description","image_url","embedded_url","map","content","idx","alignItems","noWrap","component","width","setContentTitle","setContentImageUrl","imageUrl","setContentEmbeddedUrl","embeddedUrl","rowsMin","setContentDescription","removeContent","FormGroup","React","props","ref","_props$row","row","other","_objectWithoutProperties","_extends","clsx","withStyles","display","flexDirection","flexWrap","name","createSvgIcon","d"],"sourceRoot":""}