{"version":3,"file":"static/js/478.7a5daec8.chunk.js","mappings":"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","sources":["features/form/alcoholSafetyBottom/index.tsx","features/form/alcoholSafetyBottom/alcoholSafetyBottom.tsx","features/form/indication/index.tsx","../node_modules/@material-ui/icons/esm/AddCircle.js"],"sourcesContent":["import alcoholSafetyBottom from './alcoholSafetyBottom';\nexport default alcoholSafetyBottom;\n","import React from 'react';\nimport Indication from '../indication';\n\nconst AlcoholSafetyBottom = () => {\n  return (\n    <>\n      <Indication />\n    </>\n  );\n};\nexport default AlcoholSafetyBottom;\n","import { FC, useState } from 'react';\nimport {\n  Grid,\n  Button,\n  Divider,\n  IconButton,\n  FormControl,\n  Switch,\n  FormGroup,\n  TextField,\n  FormControlLabel,\n} from '@material-ui/core';\nimport Spacer from 'src/components/Spacer';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AddCircle, Delete } from '@material-ui/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from 'src/features';\nimport {\n  setTitle,\n  setSubtitle,\n  setDescription,\n  setImageUrl,\n  setContentLabel,\n  setContentValue,\n  setWarning,\n  addContent,\n  removeContent,\n} from './indicationSlice';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '480px',\n  },\n  sketchPickerWrapper: {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst Indication: FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { imageUrl, title, subtitle, description, warning, contents } = useSelector((state: RootState) => ({\n    imageUrl: state.indicationSlice.image_url,\n    title: state.indicationSlice.title,\n    subtitle: state.indicationSlice.subtitle,\n    description: state.indicationSlice.description,\n    warning: state.indicationSlice.warning,\n    contents: state.indicationSlice.contents,\n  }));\n\n  const [isImage, setIsImage] = useState<boolean>(!!imageUrl);\n  console.log('warning', warning);\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12}>\n        <FormControlLabel\n          className={classes.formControl}\n          label='이미지로 등록하기'\n          control={<Switch checked={isImage} onChange={(e) => setIsImage(e.target.checked)} />}\n        />\n      </Grid>\n      {isImage ? (\n        <Grid item xs={12}>\n          <FormControl className={classes.formControl}>\n            <TextField\n              label='이미지 URL'\n              value={imageUrl}\n              placeholder='https://'\n              onChange={({ target: { value } }) => dispatch(setImageUrl(value as string))}\n            />\n          </FormControl>\n        </Grid>\n      ) : (\n        <>\n          <Spacer axis='vertical' size={12} />\n          <Grid item xs={12}>\n            <FormControl className={classes.formControl}>\n              <TextField\n                label='제품명(영문)'\n                value={title}\n                onChange={({ target: { value } }) => dispatch(setTitle(value as string))}\n              />\n            </FormControl>\n          </Grid>\n          <Spacer axis='vertical' size={12} />\n          <Grid item xs={12}>\n            <FormControl className={classes.formControl}>\n              <TextField\n                label='제품명(한글)'\n                value={subtitle}\n                onChange={({ target: { value } }) => dispatch(setSubtitle(value as string))}\n              />\n            </FormControl>\n          </Grid>\n          <Spacer axis='vertical' size={12} />\n          <Grid item xs={12}>\n            <FormControl className={classes.formControl}>\n              <TextField\n                label='설명'\n                value={description}\n                onChange={({ target: { value } }) => dispatch(setDescription(value as string))}\n              />\n            </FormControl>\n          </Grid>\n          <Spacer axis='vertical' size={12} />\n          <Grid item xs={12}>\n            <FormControl className={classes.formControl} style={{ minWidth: '240px' }}>\n              <Button\n                variant='outlined'\n                color='primary'\n                startIcon={<AddCircle />}\n                onClick={() =>\n                  dispatch(\n                    addContent({\n                      key: contents.length,\n                      label: '',\n                      value: '',\n                    }),\n                  )\n                }\n              >\n                콘텐츠 추가\n              </Button>\n            </FormControl>\n          </Grid>\n          <Spacer axis='vertical' size={12} />\n          <Grid item xs={12}>\n            <Grid container alignItems='center'>\n              {contents?.map((content, idx) => {\n                return (\n                  <>\n                    <Grid item xs={10}>\n                      <FormGroup key={idx} style={{ width: '100%' }}>\n                        <FormControl className={classes.formControl}>\n                          <TextField\n                            style={{ minWidth: '120px' }}\n                            variant='outlined'\n                            value={content.label}\n                            onChange={({ target: { value } }) =>\n                              dispatch(\n                                setContentLabel({\n                                  key: idx,\n                                  label: value,\n                                }),\n                              )\n                            }\n                          />\n                        </FormControl>\n                        <FormControl className={classes.formControl}>\n                          <TextField\n                            style={{ minWidth: '120px' }}\n                            variant='outlined'\n                            value={content.value}\n                            onChange={({ target: { value } }) =>\n                              dispatch(\n                                setContentValue({\n                                  key: idx,\n                                  value,\n                                }),\n                              )\n                            }\n                          />\n                        </FormControl>\n                      </FormGroup>\n                    </Grid>\n                    <Grid item xs={2}>\n                      <FormControl className={classes.formControl} style={{ minWidth: 0 }}>\n                        <IconButton aria-label='delete' color='secondary' onClick={() => dispatch(removeContent(idx))}>\n                          <Delete />\n                        </IconButton>\n                      </FormControl>\n                    </Grid>\n                    {contents.length - 1 !== idx && (\n                      <Grid item xs={12}>\n                        <Divider />\n                      </Grid>\n                    )}\n                  </>\n                );\n              })}\n            </Grid>\n          </Grid>\n        </>\n      )}\n      <Grid item xs={12}>\n        {warning?.map((warningValue, index) => {\n          return (\n            <FormControl className={classes.formControl} key={index}>\n              <TextField\n                value={warningValue}\n                onChange={({ target: { value } }) => {\n                  let copied = ([] as string[]).concat(warning);\n                  copied[index] = value;\n                  dispatch(setWarning(copied));\n                }}\n              />\n            </FormControl>\n          );\n        }) || []}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Indication;\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircle');"],"names":["useStyles","makeStyles","theme","root","formControl","margin","spacing","minWidth","sketchPickerWrapper","padding","classes","dispatch","useDispatch","useSelector","state","imageUrl","indicationSlice","image_url","title","subtitle","description","warning","contents","useState","isImage","setIsImage","console","log","container","className","item","xs","label","control","checked","onChange","e","target","value","placeholder","setImageUrl","axis","size","setTitle","setSubtitle","setDescription","style","variant","color","startIcon","onClick","addContent","key","length","alignItems","map","content","idx","width","setContentLabel","setContentValue","removeContent","warningValue","index","copied","concat","setWarning","createSvgIcon","React","d"],"sourceRoot":""}